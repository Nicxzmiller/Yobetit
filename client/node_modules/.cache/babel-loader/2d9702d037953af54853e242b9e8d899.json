{"ast":null,"code":"import { AUTH_FAILED, AUTH_REQUESTED, AUTH_SUCCEEDED } from './actions';\nexport const authenticate = (userInfo = {}, action = 'login') => {\n  return async (dispatch, getState, args) => {\n    const {\n      backendService\n    } = args;\n    const actionMap = {\n      login: backendService.login.bind(backendService),\n      register: backendService.register.bind(backendService)\n    };\n    dispatch({\n      type: AUTH_REQUESTED\n    });\n    const {\n      data: {\n        data\n      },\n      error\n    } = await actionMap[action](userInfo);\n\n    if (error) {\n      return dispatch({\n        type: AUTH_FAILED,\n        payload: error.message\n      });\n    }\n\n    return dispatch({\n      type: AUTH_SUCCEEDED,\n      payload: data\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/neech/Desktop/Projects/yobetit/client/src/store/actions/authActions.js"],"names":["AUTH_FAILED","AUTH_REQUESTED","AUTH_SUCCEEDED","authenticate","userInfo","action","dispatch","getState","args","backendService","actionMap","login","bind","register","type","data","error","payload","message"],"mappings":"AAAA,SACIA,WADJ,EAEIC,cAFJ,EAGIC,cAHJ,QAIO,WAJP;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAQ,GAAG,EAAZ,EAAgBC,MAAM,GAAG,OAAzB,KAAqC;AAC7D,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,IAA3B,KAAoC;AACvC,UAAM;AAACC,MAAAA;AAAD,QAAmBD,IAAzB;AACA,UAAME,SAAS,GAAG;AACdC,MAAAA,KAAK,EAAEF,cAAc,CAACE,KAAf,CAAqBC,IAArB,CAA0BH,cAA1B,CADO;AAEdI,MAAAA,QAAQ,EAAEJ,cAAc,CAACI,QAAf,CAAwBD,IAAxB,CAA6BH,cAA7B;AAFI,KAAlB;AAIAH,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEb;AAAP,KAAD,CAAR;AACA,UAAM;AAACc,MAAAA,IAAI,EAAE;AAACA,QAAAA;AAAD,OAAP;AAAeC,MAAAA;AAAf,QAAwB,MAAMN,SAAS,CAACL,MAAD,CAAT,CAAkBD,QAAlB,CAApC;;AACA,QAAIY,KAAJ,EAAW;AACP,aAAOV,QAAQ,CAAC;AACZQ,QAAAA,IAAI,EAAEd,WADM;AAEZiB,QAAAA,OAAO,EAAED,KAAK,CAACE;AAFH,OAAD,CAAf;AAIH;;AACD,WAAOZ,QAAQ,CAAC;AACZQ,MAAAA,IAAI,EAAEZ,cADM;AAEZe,MAAAA,OAAO,EAAEF;AAFG,KAAD,CAAf;AAIH,GAlBD;AAmBH,CApBM","sourcesContent":["import {\r\n    AUTH_FAILED,\r\n    AUTH_REQUESTED,\r\n    AUTH_SUCCEEDED\r\n} from './actions';\r\n\r\nexport const authenticate = (userInfo = {}, action = 'login') => {\r\n    return async (dispatch, getState, args) => {\r\n        const {backendService} = args;\r\n        const actionMap = {\r\n            login: backendService.login.bind(backendService),\r\n            register: backendService.register.bind(backendService)\r\n        };\r\n        dispatch({type: AUTH_REQUESTED});\r\n        const {data: {data}, error} = await actionMap[action](userInfo);\r\n        if (error) {\r\n            return dispatch({\r\n                type: AUTH_FAILED,\r\n                payload: error.message\r\n            })\r\n        }\r\n        return dispatch({\r\n            type: AUTH_SUCCEEDED,\r\n            payload: data\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}